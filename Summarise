# #!/usr/bin/env python3
# # Requires PyAudio and PySpeech.

import speech_recognition as sr

# Record Audio
r = sr.Recognizer()
with sr.Microphone() as source:
    print("Say something!")
    audio = r.listen(source)

# Speech recognition using Google Speech Recognition
try:
    # for testing purposes, we're just using the default API key
    # to use another API key, use `r.recognize_google(audio, key="GOOGLE_SPEECH_RECOGNITION_API_KEY")`
    # instead of `r.recognize_google(audio)`
    print("You said: " + r.recognize_google(audio))
except sr.UnknownValueError:
    print("Google Speech Recognition could not understand audio")
except sr.RequestError as e:
    print("Could not request results from Google Speech Recognition service; {0}".format(e))
# tokens = ['keep',
# 	'working',
# 	'keep',
# 	'striving',
# 	'never',
# 	'give',
# 	'fall',
# 	'seven',
# 	'time',
# 	'get',
# 	'eight',
# 	'ease',
# 	'greater',
# 	'threat',
# 	'progress',
# 	'hardship',
# 	'ease',
# 	'greater',
# 	'threat',
# 	'progress',
# 	'hardship',
# 	'keep',
# 	'moving',
# 	'keep',
# 	'growing',
# 	'keep',
# 	'learning',
# 	'see',
# 	'work']

# import bs4 as bs
# import urllib.request
# import re
# import heapq
# import nltk

# scraped_data = urllib.request.urlopen('https://en.wikipedia.org/wiki/Artificial_intelligence')
# article = scraped_data.read()

# parsed_article = bs.BeautifulSoup(article,'lxml')

# paragraphs = parsed_article.find_all('p')

# article_text = ""

# for p in paragraphs:
# 	article_text += p.text

# # print(article_text)

# article_text = re.sub(r'\[[0-9]*\]', ' ', article_text)
# article_text = re.sub(r'\s+', ' ', article_text)
# formatted_article_text = re.sub('[^a-zA-Z]', ' ', article_text )
# formatted_article_text = re.sub(r'\s+', ' ', formatted_article_text)
# sentence_list = nltk.sent_tokenize(article_text)

# stopwords = nltk.corpus.stopwords.words('english')

# word_frequencies = {}
# for word in nltk.word_tokenize(formatted_article_text):
# 	if word not in stopwords:
# 		if word not in word_frequencies.keys():
# 			word_frequencies[word] = 1
# 		else:
# 			word_frequencies[word] += 1

# maximum_frequncy = max(word_frequencies.values())

# for word in word_frequencies.keys():
# 	word_frequencies[word] = (word_frequencies[word]/maximum_frequncy)

# sentence_scores = {}
# for sent in sentence_list:
# 	for word in nltk.word_tokenize(sent.lower()):
# 		if word in word_frequencies.keys():
# 			if len(sent.split(' ')) < 30:
# 				if sent not in sentence_scores.keys():
# 					sentence_scores[sent] = word_frequencies[word]
# 				else:
# 					sentence_scores[sent] += word_frequencies[word]
# summary_sentences = heapq.nlargest(7, sentence_scores, key=sentence_scores.get)

# summary = ' '.join(summary_sentences)
# print(summary)



 # In computer science, artificial intelligence (AI), sometimes called machine intelligence, is intelligence demonstrated by machines, in 
 # contrast to the natural intelligence displayed by humans. Artificial intelligence can be classified into three different types of systems: 
 # analytical, human-inspired, and humanized artificial intelligence. Neural networks can be applied to the problem of intelligent control 
 # (for robotics) or learning, using such techniques as Hebbian learning ("fire together, wire together"), GMDH or competitive learning. Musk also 
 # funds companies developing artificial intelligence such as Google DeepMind and Vicarious to "just keep an eye on what's going on with artificial 
 # intelligence. IBM has created its own artificial intelligence computer, the IBM Watson, which has beaten human intelligence (at some levels). 
 # Many of the problems in this article may also require general intelligence, if machines are to solve the problems as well as people do. "robotics" or
 #  "machine learning"), the use of particular tools ("logic" or artificial neural networks), or deep philosophical differences.
